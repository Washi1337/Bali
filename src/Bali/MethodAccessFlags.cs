using System;

namespace Bali
{
    /// <summary>
    /// Denotes access permissions of a method.
    /// </summary>
    [Flags]
    public enum MethodAccessFlags : ushort
    {
        /// <summary>
        /// Declared public; may be accessed from outside its package.
        /// </summary>
        Public = 0x0001,
        
        /// <summary>
        /// Declared private; accessible only within the defining class.
        /// </summary>
        Private = 0x0002,
        
        /// <summary>
        /// Declared protected; may be accessed within subclasses.
        /// </summary>
        Protected = 0x0004,
        
        /// <summary>
        /// Declared static; no instance is needed to invoke the method.
        /// </summary>
        Static = 0x0008,
        
        /// <summary>
        /// Declared final; must not be overridden.
        /// </summary>
        Final = 0x0010,
        
        /// <summary>
        /// Declared synchronized; invocation is wrapped by a monitor use.
        /// </summary>
        Synchronized = 0x0020,
        
        /// <summary>
        /// A bridge method, generated by the compiler.
        /// </summary>
        Bridge = 0x0040,
        
        /// <summary>
        /// Declared with variable number of arguments.
        /// </summary>
        Varargs = 0x0080,
        
        /// <summary>
        /// Declared native; implemented in a language other than Java.
        /// </summary>
        Native = 0x0100,
        
        /// <summary>
        /// Declared abstract; no implementation is provided.
        /// </summary>
        Abstract = 0x0400,
        
        /// <summary>
        /// Declared strictfp; floating-point mode is FP-strict.
        /// </summary>
        Strict = 0x0800,
        
        /// <summary>
        /// Declared synthetic; not present in the source code.
        /// </summary>
        Synthetic = 0x1000
    }
}